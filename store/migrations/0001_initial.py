# Generated by Django 3.2.3 on 2021-06-06 15:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo', models.CharField(choices=[('AMS', 'Amministratore di sistema'), ('MED', 'Medico Radiologo'), ('TEC', 'Tecnico di Radiologia'), ('AMM', 'Amministrativo'), ('INF', 'Infermiere')], max_length=3)),
                ('titolo', models.TextField(blank=True)),
                ('skill_anagrafica_pazienti', models.CharField(choices=[('N', 'Nessun Accesso'), ('R', 'Lettura'), ('W', 'Lettura e Scrittura'), ('F', 'Accesso completo')], max_length=1)),
                ('skill_referti', models.CharField(choices=[('N', 'Nessun Accesso'), ('R', 'Lettura'), ('W', 'Lettura e Scrittura'), ('F', 'Accesso completo')], max_length=1)),
                ('flag_firma_referto', models.BooleanField(default=False)),
                ('flag_revisione_referto', models.BooleanField(default=False)),
                ('flag_schedulazione_esame', models.BooleanField(default=False)),
                ('flag_accettazione_clinica', models.BooleanField(default=False)),
                ('flag_completamento_esame', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Utente',
                'verbose_name_plural': 'Utenti',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Apparato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice', models.CharField(blank=True, max_length=2, null=True)),
                ('descrizione', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Apparato',
                'verbose_name_plural': 'Apparati',
            },
        ),
        migrations.CreateModel(
            name='AziendaRefertazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('ragione_sociale', models.CharField(blank=True, max_length=32, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=32, null=True)),
                ('cap', models.CharField(blank=True, max_length=5, null=True)),
                ('citta', models.CharField(blank=True, max_length=32, null=True)),
                ('provincia', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sito_web', models.URLField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('p_iva', models.CharField(blank=True, max_length=16, null=True)),
                ('responsabile', models.CharField(blank=True, max_length=32, null=True)),
                ('direttore_sanitario', models.CharField(blank=True, max_length=32, null=True)),
                ('descrizione', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Centro di Refertazione',
                'verbose_name_plural': 'Centri di Refertazione',
            },
        ),
        migrations.CreateModel(
            name='Esame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_esame', models.CharField(db_index=True, max_length=16, null=True)),
                ('study_instace_uid', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('anamnesi', models.TextField(blank=True, null=True)),
                ('contenuto_richiesta', models.TextField(blank=True, null=True)),
                ('motivo_esame', models.TextField(blank=True, null=True)),
                ('descrizione_esame', models.TextField(blank=True, null=True)),
                ('flag_urgente', models.BooleanField(default=False, null=True)),
                ('stato_avanzamento', models.IntegerField(choices=[(0, 'Prenotato'), (1, 'Accettato'), (2, 'Schedulato'), (3, 'Iniziato'), (4, 'Completato'), (5, 'Refertato'), (6, 'Firmato'), (7, 'Consegnato'), (8, 'Annullato')], default=0)),
                ('data_ora_prenotato', models.DateTimeField(blank=True, null=True)),
                ('data_ora_accettato', models.DateTimeField(blank=True, null=True)),
                ('data_ora_schedulato', models.DateTimeField(blank=True, null=True)),
                ('data_ora_inizio', models.DateTimeField(blank=True, null=True)),
                ('data_ora_completato', models.DateTimeField(blank=True, null=True)),
                ('data_ora_refertazione', models.DateTimeField(blank=True, null=True)),
                ('testo_referto', models.TextField(blank=True, null=True)),
                ('giudizio', models.CharField(choices=[('NV', 'Non Valutato'), ('NEG', 'Negativo'), ('POS', 'Positivo')], default='NV', max_length=3)),
                ('qualita_esame', models.CharField(choices=[('NV', 'Non Valutata'), ('BAS', 'Bassa'), ('BUO', 'Buona'), ('OTT', 'Ottima')], default='NV', max_length=3)),
                ('impressioni', models.TextField(blank=True, null=True)),
                ('data_ora_firma', models.DateTimeField(blank=True, null=True)),
                ('flag_firma_digitale', models.BooleanField(default=False)),
                ('flag_produzione_CD', models.BooleanField(default=False)),
                ('data_ora_consegna', models.DateTimeField(blank=True, null=True)),
                ('consegnato_a', models.TextField(blank=True, null=True)),
                ('data_ora_annullato', models.DateTimeField(blank=True, null=True)),
                ('accettato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accettato_da', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('annullato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='annullato_da', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('completato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='completato_da', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('consegnato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='consegnato_da', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('firmato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='firmato_da', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('iniziato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='iniziato_da', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'verbose_name': 'Esame',
                'verbose_name_plural': 'Esami',
            },
        ),
        migrations.CreateModel(
            name='Frasario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'verbose_name': 'Frasario',
                'verbose_name_plural': 'Frasari',
            },
        ),
        migrations.CreateModel(
            name='Metodica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice', models.IntegerField(default=0)),
                ('descrizione', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'verbose_name': 'Metodica',
                'verbose_name_plural': 'Metodiche',
            },
        ),
        migrations.CreateModel(
            name='NomenclatorePrestazioni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_interno', models.CharField(blank=True, max_length=10, null=True)),
                ('esame', models.IntegerField(default=0)),
                ('codice_ministeriale', models.CharField(blank=True, max_length=10, null=True)),
                ('descrizione', models.CharField(blank=True, max_length=128, null=True)),
                ('tariffa', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('tempo_esecuzione', models.IntegerField(default=0)),
                ('apparato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.apparato')),
                ('metodica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.metodica')),
            ],
            options={
                'verbose_name': 'Prestazione erogabile',
                'verbose_name_plural': 'Prestazioni erogabili',
            },
        ),
        migrations.CreateModel(
            name='Preparazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('descrizione', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Preparazione',
                'verbose_name_plural': 'Preparazioni',
            },
        ),
        migrations.CreateModel(
            name='Radiologia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('ragione_sociale', models.CharField(blank=True, max_length=32, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=32, null=True)),
                ('cap', models.CharField(blank=True, max_length=5, null=True)),
                ('citta', models.CharField(blank=True, max_length=32, null=True)),
                ('provincia', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sito_web', models.URLField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('p_iva', models.CharField(blank=True, max_length=16, null=True)),
                ('responsabile', models.CharField(blank=True, max_length=32, null=True)),
                ('direttore_sanitario', models.CharField(blank=True, max_length=32, null=True)),
                ('descrizione', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Radiologia',
                'verbose_name_plural': 'Radiologie',
            },
        ),
        migrations.CreateModel(
            name='SalaDiagnostica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('descrizione', models.TextField(blank=True, null=True)),
                ('radiologia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.radiologia')),
            ],
            options={
                'verbose_name': 'Sala Diagnostica',
                'verbose_name_plural': 'Sale Diagnostiche',
            },
        ),
        migrations.CreateModel(
            name='Revisione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_revisione', models.IntegerField(blank=True, null=True)),
                ('tipo', models.CharField(choices=[('I', 'Integrativa'), ('S', 'Sostitutiva'), ('A', 'Annullativa')], default='I', max_length=1)),
                ('data_ora', models.DateTimeField(auto_now_add=True)),
                ('testo', models.TextField(blank=True, null=True)),
                ('esame', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.esame')),
                ('revisionato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'verbose_name': 'Revisione',
                'verbose_name_plural': 'Revisioni',
            },
        ),
        migrations.CreateModel(
            name='Prestazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modificatore', models.CharField(blank=True, max_length=16, null=True)),
                ('commento', models.TextField(blank=True, null=True)),
                ('esame', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.esame')),
                ('prestazione', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.nomenclatoreprestazioni')),
            ],
            options={
                'verbose_name': 'Prestazione',
                'verbose_name_plural': 'Prestazioni',
            },
        ),
        migrations.CreateModel(
            name='Paziente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_paziente', models.CharField(db_index=True, max_length=16)),
                ('codice_estermo', models.CharField(db_index=True, max_length=16)),
                ('codice_fiscale', models.CharField(blank=True, max_length=16, null=True)),
                ('tessera_sanitaria', models.CharField(blank=True, max_length=30, null=True)),
                ('nome', models.CharField(db_index=True, max_length=40, null=True)),
                ('cognome', models.CharField(db_index=True, max_length=40, null=True)),
                ('data_nascita', models.DateField(blank=True, null=True)),
                ('sesso', models.CharField(choices=[('N', 'Non Assegnato'), ('M', 'Maschio'), ('F', 'Femmina')], default='N', max_length=1)),
                ('comune_nascita', models.CharField(blank=True, max_length=64, null=True)),
                ('codice_comune_nascita', models.CharField(blank=True, max_length=12, null=True)),
                ('indirizzo_residenza', models.CharField(blank=True, max_length=64, null=True)),
                ('cap_residenza', models.CharField(blank=True, max_length=5, null=True)),
                ('comune_residenza', models.CharField(blank=True, max_length=64, null=True)),
                ('codice_comune_residenza', models.CharField(blank=True, max_length=12, null=True)),
                ('provincia_residenza', models.CharField(blank=True, max_length=2, null=True)),
                ('indirizzo_domicilio', models.CharField(blank=True, max_length=64, null=True)),
                ('cap_domicilio', models.CharField(blank=True, max_length=5, null=True)),
                ('comune_domicilio', models.CharField(blank=True, max_length=64, null=True)),
                ('codice_comune_domicilio', models.CharField(blank=True, max_length=12, null=True)),
                ('provincia_domicilio', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('telefono', models.CharField(blank=True, max_length=64, null=True)),
                ('anamnesi_remota', models.TextField(blank=True, null=True)),
                ('medico_di_base', models.CharField(blank=True, max_length=32, null=True)),
                ('radiologia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.radiologia')),
            ],
            options={
                'verbose_name': 'Paziente',
                'verbose_name_plural': 'Pazienti',
            },
        ),
        migrations.CreateModel(
            name='OrganoFrase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=32, null=True)),
                ('frasario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.frasario')),
            ],
            options={
                'verbose_name': 'Organo frassario',
                'verbose_name_plural': 'Organi frasario',
            },
        ),
        migrations.CreateModel(
            name='Organo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice', models.IntegerField(default=0)),
                ('descrizione', models.CharField(blank=True, max_length=64, null=True)),
                ('apparato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.apparato')),
            ],
            options={
                'verbose_name': 'Organo',
                'verbose_name_plural': 'Organi',
            },
        ),
        migrations.AddField(
            model_name='nomenclatoreprestazioni',
            name='organo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.organo'),
        ),
        migrations.AddField(
            model_name='nomenclatoreprestazioni',
            name='preparazioni',
            field=models.ManyToManyField(to='store.Preparazione'),
        ),
        migrations.CreateModel(
            name='Frase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=32, null=True)),
                ('testo_predefinito', models.TextField(blank=True, null=True)),
                ('organo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.organofrase')),
            ],
            options={
                'verbose_name': 'Frase',
                'verbose_name_plural': 'Frasi',
            },
        ),
        migrations.AddField(
            model_name='frasario',
            name='metodica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.metodica'),
        ),
        migrations.AddField(
            model_name='frasario',
            name='utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.AddField(
            model_name='esame',
            name='paziente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.paziente'),
        ),
        migrations.AddField(
            model_name='esame',
            name='prenotato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='prenotato_da', to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.AddField(
            model_name='esame',
            name='radiologia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.radiologia'),
        ),
        migrations.AddField(
            model_name='esame',
            name='refertato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='refertato_da', to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.AddField(
            model_name='esame',
            name='sala_diagnostica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.saladiagnostica'),
        ),
        migrations.AddField(
            model_name='esame',
            name='schedulato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='schedulato_da', to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.CreateModel(
            name='Attrezzatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(blank=True, max_length=32, null=True)),
                ('modello', models.CharField(blank=True, max_length=32, null=True)),
                ('descrizione', models.TextField(blank=True, null=True)),
                ('anno_acquisto', models.DateField(blank=True, null=True)),
                ('data_ultima_manutenzione', models.DateField(blank=True, null=True)),
                ('data_prossima_manutenzione', models.DateField(blank=True, null=True)),
                ('fermo_macchina', models.BooleanField(default=False)),
                ('fine_fermo_macchina', models.DateField(blank=True, null=True)),
                ('telefono_assistenza_tecnica', models.CharField(blank=True, max_length=15, null=True)),
                ('referente_assistenza_tecnica', models.CharField(blank=True, max_length=32, null=True)),
                ('modality', models.CharField(blank=True, max_length=10, null=True)),
                ('dicom_ae_title', models.CharField(blank=True, max_length=16, null=True)),
                ('sala_diagnostica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.saladiagnostica')),
            ],
            options={
                'verbose_name': 'Attrezzatura',
                'verbose_name_plural': 'Attrezzature',
            },
        ),
        migrations.AddField(
            model_name='apparato',
            name='metodica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.metodica'),
        ),
        migrations.AddField(
            model_name='utente',
            name='radiologia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.radiologia'),
        ),
        migrations.AddField(
            model_name='utente',
            name='sale_diagnostiche',
            field=models.ManyToManyField(to='store.SalaDiagnostica'),
        ),
        migrations.AddField(
            model_name='utente',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
